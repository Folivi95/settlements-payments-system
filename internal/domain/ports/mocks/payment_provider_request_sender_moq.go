// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"context"
	"github.com/saltpay/settlements-payments-system/internal/domain/models"
	"github.com/saltpay/settlements-payments-system/internal/domain/ports"
	"sync"
)

// Ensure, that PaymentProviderRequestSenderMock does implement ports.PaymentProviderRequestSender.
// If this is not the case, regenerate this file with moq.
var _ ports.PaymentProviderRequestSender = &PaymentProviderRequestSenderMock{}

// PaymentProviderRequestSenderMock is a mock implementation of ports.PaymentProviderRequestSender.
//
// 	func TestSomethingThatUsesPaymentProviderRequestSender(t *testing.T) {
//
// 		// make and configure a mocked ports.PaymentProviderRequestSender
// 		mockedPaymentProviderRequestSender := &PaymentProviderRequestSenderMock{
// 			SendPaymentInstructionFunc: func(ctx context.Context, paymentInstruction models.PaymentInstruction) error {
// 				panic("mock out the SendPaymentInstruction method")
// 			},
// 		}
//
// 		// use mockedPaymentProviderRequestSender in code that requires ports.PaymentProviderRequestSender
// 		// and then make assertions.
//
// 	}
type PaymentProviderRequestSenderMock struct {
	// SendPaymentInstructionFunc mocks the SendPaymentInstruction method.
	SendPaymentInstructionFunc func(ctx context.Context, paymentInstruction models.PaymentInstruction) error

	// calls tracks calls to the methods.
	calls struct {
		// SendPaymentInstruction holds details about calls to the SendPaymentInstruction method.
		SendPaymentInstruction []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// PaymentInstruction is the paymentInstruction argument value.
			PaymentInstruction models.PaymentInstruction
		}
	}
	lockSendPaymentInstruction sync.RWMutex
}

// SendPaymentInstruction calls SendPaymentInstructionFunc.
func (mock *PaymentProviderRequestSenderMock) SendPaymentInstruction(ctx context.Context, paymentInstruction models.PaymentInstruction) error {
	if mock.SendPaymentInstructionFunc == nil {
		panic("PaymentProviderRequestSenderMock.SendPaymentInstructionFunc: method is nil but PaymentProviderRequestSender.SendPaymentInstruction was just called")
	}
	callInfo := struct {
		Ctx                context.Context
		PaymentInstruction models.PaymentInstruction
	}{
		Ctx:                ctx,
		PaymentInstruction: paymentInstruction,
	}
	mock.lockSendPaymentInstruction.Lock()
	mock.calls.SendPaymentInstruction = append(mock.calls.SendPaymentInstruction, callInfo)
	mock.lockSendPaymentInstruction.Unlock()
	return mock.SendPaymentInstructionFunc(ctx, paymentInstruction)
}

// SendPaymentInstructionCalls gets all the calls that were made to SendPaymentInstruction.
// Check the length with:
//     len(mockedPaymentProviderRequestSender.SendPaymentInstructionCalls())
func (mock *PaymentProviderRequestSenderMock) SendPaymentInstructionCalls() []struct {
	Ctx                context.Context
	PaymentInstruction models.PaymentInstruction
} {
	var calls []struct {
		Ctx                context.Context
		PaymentInstruction models.PaymentInstruction
	}
	mock.lockSendPaymentInstruction.RLock()
	calls = mock.calls.SendPaymentInstruction
	mock.lockSendPaymentInstruction.RUnlock()
	return calls
}
