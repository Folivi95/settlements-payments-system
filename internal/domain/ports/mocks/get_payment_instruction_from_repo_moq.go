// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"context"
	"github.com/saltpay/settlements-payments-system/internal/domain/models"
	"github.com/saltpay/settlements-payments-system/internal/domain/ports"
	"sync"
)

// Ensure, that GetPaymentInstructionFromRepoMock does implement ports.GetPaymentInstructionFromRepo.
// If this is not the case, regenerate this file with moq.
var _ ports.GetPaymentInstructionFromRepo = &GetPaymentInstructionFromRepoMock{}

// GetPaymentInstructionFromRepoMock is a mock implementation of ports.GetPaymentInstructionFromRepo.
//
// 	func TestSomethingThatUsesGetPaymentInstructionFromRepo(t *testing.T) {
//
// 		// make and configure a mocked ports.GetPaymentInstructionFromRepo
// 		mockedGetPaymentInstructionFromRepo := &GetPaymentInstructionFromRepoMock{
// 			GetFunc: func(ctx context.Context, paymentInstructionID models.PaymentInstructionID) (models.PaymentInstruction, error) {
// 				panic("mock out the Get method")
// 			},
// 			GetFromCorrelationIDFunc: func(ctx context.Context, correlationID string) ([]models.PaymentInstruction, error) {
// 				panic("mock out the GetFromCorrelationID method")
// 			},
// 		}
//
// 		// use mockedGetPaymentInstructionFromRepo in code that requires ports.GetPaymentInstructionFromRepo
// 		// and then make assertions.
//
// 	}
type GetPaymentInstructionFromRepoMock struct {
	// GetFunc mocks the Get method.
	GetFunc func(ctx context.Context, paymentInstructionID models.PaymentInstructionID) (models.PaymentInstruction, error)

	// GetFromCorrelationIDFunc mocks the GetFromCorrelationID method.
	GetFromCorrelationIDFunc func(ctx context.Context, correlationID string) ([]models.PaymentInstruction, error)

	// calls tracks calls to the methods.
	calls struct {
		// Get holds details about calls to the Get method.
		Get []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// PaymentInstructionID is the paymentInstructionID argument value.
			PaymentInstructionID models.PaymentInstructionID
		}
		// GetFromCorrelationID holds details about calls to the GetFromCorrelationID method.
		GetFromCorrelationID []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// CorrelationID is the correlationID argument value.
			CorrelationID string
		}
	}
	lockGet                  sync.RWMutex
	lockGetFromCorrelationID sync.RWMutex
}

// Get calls GetFunc.
func (mock *GetPaymentInstructionFromRepoMock) Get(ctx context.Context, paymentInstructionID models.PaymentInstructionID) (models.PaymentInstruction, error) {
	if mock.GetFunc == nil {
		panic("GetPaymentInstructionFromRepoMock.GetFunc: method is nil but GetPaymentInstructionFromRepo.Get was just called")
	}
	callInfo := struct {
		Ctx                  context.Context
		PaymentInstructionID models.PaymentInstructionID
	}{
		Ctx:                  ctx,
		PaymentInstructionID: paymentInstructionID,
	}
	mock.lockGet.Lock()
	mock.calls.Get = append(mock.calls.Get, callInfo)
	mock.lockGet.Unlock()
	return mock.GetFunc(ctx, paymentInstructionID)
}

// GetCalls gets all the calls that were made to Get.
// Check the length with:
//     len(mockedGetPaymentInstructionFromRepo.GetCalls())
func (mock *GetPaymentInstructionFromRepoMock) GetCalls() []struct {
	Ctx                  context.Context
	PaymentInstructionID models.PaymentInstructionID
} {
	var calls []struct {
		Ctx                  context.Context
		PaymentInstructionID models.PaymentInstructionID
	}
	mock.lockGet.RLock()
	calls = mock.calls.Get
	mock.lockGet.RUnlock()
	return calls
}

// GetFromCorrelationID calls GetFromCorrelationIDFunc.
func (mock *GetPaymentInstructionFromRepoMock) GetFromCorrelationID(ctx context.Context, correlationID string) ([]models.PaymentInstruction, error) {
	if mock.GetFromCorrelationIDFunc == nil {
		panic("GetPaymentInstructionFromRepoMock.GetFromCorrelationIDFunc: method is nil but GetPaymentInstructionFromRepo.GetFromCorrelationID was just called")
	}
	callInfo := struct {
		Ctx           context.Context
		CorrelationID string
	}{
		Ctx:           ctx,
		CorrelationID: correlationID,
	}
	mock.lockGetFromCorrelationID.Lock()
	mock.calls.GetFromCorrelationID = append(mock.calls.GetFromCorrelationID, callInfo)
	mock.lockGetFromCorrelationID.Unlock()
	return mock.GetFromCorrelationIDFunc(ctx, correlationID)
}

// GetFromCorrelationIDCalls gets all the calls that were made to GetFromCorrelationID.
// Check the length with:
//     len(mockedGetPaymentInstructionFromRepo.GetFromCorrelationIDCalls())
func (mock *GetPaymentInstructionFromRepoMock) GetFromCorrelationIDCalls() []struct {
	Ctx           context.Context
	CorrelationID string
} {
	var calls []struct {
		Ctx           context.Context
		CorrelationID string
	}
	mock.lockGetFromCorrelationID.RLock()
	calls = mock.calls.GetFromCorrelationID
	mock.lockGetFromCorrelationID.RUnlock()
	return calls
}
